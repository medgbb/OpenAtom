####### Machine specific settings for the build #######

# Location of the charm installation
CHARMBASE     = $(HOME)/charm
# Location of the FFTW library installation
FFT_HOME      = /soft/apps/fftw-2.1.5


# Extra flags for compiling and linking the whole code. 
# Note that most necessary flags are specified in other makefiles. Only 
# mention any machine speciic stuff here.
# If you realllly want, you can clear and reset the flags here or on the command line
#---------------------------------------------------------------
CPPFLAGS     += -DFORTRANUNDERSCORE_OFF
CXXFLAGS     += -qarch=450 -qtune=450
CFLAGS       +=
FFLAGS       +=
LDFLAGS      += -memory gnu
LDLIBS       += -lm


# Options related to math routines
#---------------------------------------------------------------
# Should we use dual fft or not
DUAL_FFTW     = -DDUAL_FFTW_OFF
# Extra math libraries to be linked in if DUAL_FFTW is off
MATH_LIB      = -lesslbg -lesslsmpbg -lxlf90_r -lmass -lmassv -lxlfmath \
                -lxlomp_ser -lxlsmp -lpthread $(build)/xerbla.o
# Where the linker should find these extra math libraries
MATH_LIB_PATH = -L/soft/apps/LAPACK \
                -L/opt/ibmcmp/xlf/bg/11.1/bglib \
				-L/opt/ibmcmp/xlsmp/bg/1.7/bglib \
				-L/bgsys/ibm_essl/sles10/prod/opt/ibmmath/lib \
				-L/bgsys/drivers/ppcfloor/gnu-linux/powerpc-bgp-linux/lib \
				-L/gpfs/home/bohm/zlib/lib
# Which math library sources (that OpenAtom lugs around) need to be compiled
src_math      = $(src_xerbla) $(src_eispack)
# Special optimization options to used for compiling fastadd.C
fastadd.o:        CXXFLAGS  += -O3 -qarch=450d -qhot-simd -qhot=vector
# Should we pass -D_IBM_ESSL_ as a preprocessor flag when building ibm_essl_dummy.o
ibm_essl_dummy.o: CPPFLAGS  += -D_IBM_ESSL_


# Options related to the physics module
#---------------------------------------------------------------
# Where should we look for standard_include.h
STANDARD_INC  = $(physics)/include/ibm_noessl_par
# What flags do we use when compiling the fragile portions of piny
$(libphysics): OPT_CARE      = -O2 -qstrict
# Flags for compiling the fortran portions of the physics code
$(libphysics): FFLAGS       +=

